name: Test and Lint

on:
  push:
    branches: [ main ]
  pull_request:
    # Removing the branches filter makes it run on all PRs
    
jobs:
  api-test:
    name: API Tests
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.18
        options: --privileged
    env:
      MIN_COVERAGE: 85
      
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'apps/api/package.json'

    - name: Start database and run migrations
      working-directory: apps/api
      run: |
        docker compose up -d db
        npm install
        npx prisma generate
        npm run db:migrate
        npm run db:seed

    - name: Run tests
      working-directory: apps/api
      run: npm test -- --coverage --coverageThreshold='{"global":{"lines":${{ env.MIN_COVERAGE }}}}'

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install API dependencies
      working-directory: apps/api
      run: npm install

    - name: Install Web dependencies
      working-directory: apps/web
      run: npm install

    - name: Run API lint
      working-directory: apps/api
      run: npm run lint

    - name: Run Web lint
      working-directory: apps/web
      run: npm run lint

  web-test:
    name: Web Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'apps/web/package.json'

    - name: Install dependencies and run tests
      working-directory: apps/web
      run: |
        npm install
        npm run test:cov

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install API dependencies
      working-directory: apps/api
      run: npm install

    - name: Install Web dependencies
      working-directory: apps/web
      run: npm install

    - name: Run API lint
      working-directory: apps/api
      run: npm run build

    - name: Run Web lint
      working-directory: apps/web
      run: npm run build